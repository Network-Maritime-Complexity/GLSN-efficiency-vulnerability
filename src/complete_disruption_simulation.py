import networkx as nx
from networkx.algorithms import bipartite
import csv
import random
import pandas as pd
import os
import copy
import efficiency

def foundnetwork():
    df = pd.read_excel("../data/Edge 2018_with great circle distance (GC) and weight.xlsx", sheet_name='2018 edge GC and weight')
    G = nx.Graph()
    for index, row in df.iterrows():
        G.add_edge(row['port1'], row['port2'], weight=row['weight'],GC=row['GC'])

    print("number of nodes:", G.number_of_nodes())
    print("number of edges:", G.number_of_edges())
    return G

def dismantle_port():
    G0 = foundnetwork()
    e0 = efficiency.efficiency_measurement(G0, G0)
    print(e0)
    port = pd.read_csv('../output/port criticality.csv').sort_values(by='e')
    print(port)
    G = G0.copy()
    outer = []
    for index, row in port.iterrows():
        print(G.number_of_nodes())
        G.remove_node(row['port'])
        if(G.number_of_nodes()==0):
            outer.append([row['port'], 0,e0,1])
        else:
            we = efficiency.efficiency_measurement(G, G0)
            print(row['port'],we)
            outer.append([row['port'], we,e0,(e0-we)/e0])
    pd.DataFrame(outer,columns=['port','e','e0','delta']).to_csv('../output/dismantle port.csv')

def dismantle_country():
    G0 = foundnetwork()
    e0 = efficiency.efficiency_measurement(G0, G0)
    print(e0)
    port = pd.read_csv('../output/country criticality.csv').sort_values(by='e')
    df = pd.read_excel('../data/port 2018.xlsx', sheet_name='port 2018')
    print(port)
    G = G0.copy()
    outer=[]
    for index, row in port.iterrows():
        print(row['country'],G.number_of_nodes())
        tmp=df[df['Country Name']==row['country']]
        for index1,row1 in tmp.iterrows():
            G.remove_node(row1['port'])
        if (G.number_of_nodes() == 0):
            outer.append([row['country'], 0,e0,1])
        else:
            we=efficiency.efficiency_measurement(G, G0)
            outer.append([row['country'], we,e0,(e0-we)/e0])
            print(outer)
    pd.DataFrame(outer,columns=['country','e','e0','delta']).to_csv('../output/dismantle country.csv')

#the network efficiency after each port disruption
def port_criticality():
    G0 = foundnetwork()
    e0 = efficiency.efficiency_measurement(G0, G0)
    port = pd.read_excel('../data/port 2018.xlsx', sheet_name='port 2018')
    outer=[]
    for index, row in port.iterrows():
        G = G0.copy()
        print(G.number_of_nodes())
        G.remove_node(row['port'])
        we = efficiency.efficiency_measurement(G, G0,row['port'])
        outer.append([row['port'],we,e0,(e0-we)/e0])
        print(index,outer)
    pd.DataFrame(outer,columns=['port','e','e0 of original network','criticality']).to_csv('../output/port criticality.csv',index=False)

#the network efficiency after each country disruption
def country_criticality():
    G0 = foundnetwork()
    e0 = efficiency.efficiency_measurement(G0, G0)
    port = pd.read_excel('../data/port 2018.xlsx', sheet_name='port 2018')
    country = port.drop_duplicates(subset='Country Name').reset_index()
    cc = country['Country Name'].values
    outer = []
    for c in cc:
        G = G0.copy()
        for index, row in port.iterrows():
            if(row['Country Name']==c):
                print(G.number_of_nodes())
                G.remove_node(row['port'])
        we = efficiency.efficiency_measurement(G, G0,c)
        outer.append([c, we, e0, (e0 - we) / e0])
        print(outer)
    pd.DataFrame(outer, columns=['country', 'e', 'e0 of original network', 'criticality']).to_csv(
        '../output/country criticality.csv', index=False)

def port_vulnerability_to_port_disruption():
    df = pd.read_csv('../output/efficiency between each pair of ports under disruption of Shanghai.csv',names=['i','port1','port2', 'e'])
    df = df.groupby(by='port1', as_index=False)['e'].sum()
    df['e'] = df['e'] / 887
    port = pd.read_excel('../data/port 2018.xlsx', sheet_name='port 2018')
    for a in port['port'].values:
        if (a != 'Shanghai'):
            df0 = pd.read_csv('../output/efficiency between each pair of ports under disruption of ' + a + '.csv',names=['i','port1','port2', 'e'])
            df0 = df0.groupby(by='port1', as_index=False)['e'].sum()
            df0['e'] = df0['e'] / 887
            dfs = [df, df0]
            df = pd.concat(dfs)
            df = df.groupby(by='port1', as_index=False)['e'].sum()
    df0=pd.read_csv('../output/efficiency between each pair of ports.csv',names=['i','port1','port2', 'e0'])
    df0=df0.groupby(by='port1', as_index=False)['e0'].sum()
    df=df.merge(df0,on=['port1'])
    df['vulnerability']=(df['e0']-df['e'])/df['e0']
    df.to_csv('../output/port vulnerability.csv')


def country_vulnerability():
    df=pd.read_csv('../output/port vulnerability.csv')
    ports=pd.read_excel('../data/port 2018.xlsx')
    df=pd.merge(df,ports,left_on='port1',right_on='port')
    df=df.groupby(by='Country Name')['e','e0'].sum()
    df['vulnerability'] = (df['e0'] - df['e']) / df['e0']
    df.to_csv('../output/country vulnerability.csv')

def main():
    #network efficiency under disruptions
    port_criticality()
    country_criticality()
    dismantle_port()
    dismantle_country()
    port_vulnerability_to_port_disruption()
    country_vulnerability()

